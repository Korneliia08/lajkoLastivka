import style from "./LogIn.module.scss";
import {useRef, useState} from "react";
import {useNavigate} from "react-router-dom";
import back from "../../assets/back.png";
import axios from "axios";

function LogIn() {
    const navigate = useNavigate();

    const [correctData, setCorrectData] = useState(true);
    const [disabled, setDisabled] = useState(false);
    const [login, setLogin] = useState("");
    const loginRef = useRef(null);
    const passRef = useRef(null);
    const [password, setPass] = useState("");
    const [result, setResult] = useState(" ");

    async function checkLoginAndPass() {
        setResult("");

        if (login.length <= 0 || password.length <= 0) {
            setResult("<b  >–õ–æ–≥—ñ–Ω —ñ –ø–∞—Ä–æ–ª—å ‚Äî –∫–ª—é—á—ñ –¥–æ –≤—Å—å–æ–≥–æ. –î–µ –≤–æ–Ω–∏? ü§î</b>");
            return;
        }

        try {
            const data = {
                email: login,
                password,
            };
            setDisabled(true);
            const response = await axios.post(
                import.meta.env.VITE_APP_API + "/authorization/login",
                data,
            );
            setCorrectData(true);
            navigate("admin");
            localStorage.setItem("token", response.data.token);
            localStorage.setItem("refresh_token", response.data.refresh_token);
        } catch (error) {
            setCorrectData(false);
            setResult("<b   >–î–∞–Ω—ñ –Ω–µ–≤—ñ—Ä–Ω—ñ, –ª–∞—Å—Ç—ñ–≤–∫–∞ –Ω–µ –º–æ–∂–µ –∑–ª–µ—Ç—ñ—Ç–∏</b>");
        }
        setDisabled(false);
        loginRef.current.value = "";
        passRef.current.value = "";
    }

    return (
        <div className={style.container}>
            <div className={style.left}>
                <img src={back}/>
                <div className={style.block}>
                    <h5>–†–∞–¥—ñ –±–∞—á–∏—Ç–∏ —Ç–µ–±–µ –∑–Ω–æ–≤—É</h5>
                    <p>
                        –ü—Ä–æ–¥–æ–≤–∂—É–π –∑ —Ç–æ–≥–æ –º—ñ—Å—Ü—è, –¥–µ –∑—É–ø–∏–Ω–∏–≤—Å—è, —ñ –¥–æ—Å—è–≥–∞–π –Ω–æ–≤–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤!
                    </p>
                </div>
            </div>
            <div className={style.right}>
                <h5 className={style.title}>–í—Ö—ñ–¥ –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ—ó –ø–∞–Ω–µ–ª—ñ</h5>
                <p className={style.description}>
                    –ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞ –ø–∞–Ω–µ–ª—å –Ω–∞–¥–∞—î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑—Ä—É—á–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤—É–≤–∞—Ç–∏ —Ä–æ–∑—Å–∏–ª–∫—É
                    –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —Ç–∞ –∑–¥—ñ–π—Å–Ω—é–≤–∞—Ç–∏ –∞–Ω–∞–ª—ñ–∑ –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –≤—ñ–¥–≥—É–∫—ñ–≤, —â–æ –¥–æ–ø–æ–º–∞–≥–∞—î
                    –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –∫–µ—Ä—É–≤–∞—Ç–∏ –ø—Ä–æ—Ü–µ—Å–∞–º–∏ –Ω–∞ –≤–∞—à–æ–º—É —Å–∞–π—Ç—ñ.
                </p>
                <form
                    className={style.formLogIn}
                    onClick={(event) => event.preventDefault()}
                >
                    <input
                        ref={loginRef}
                        type="text"
                        className={style.inputLogIn}
                        placeholder="–õ–æ–≥—ñ–Ω"
                        onChange={(ev) => setLogin(ev.target.value)}
                    />
                    <input
                        ref={passRef}
                        type="password"
                        className={style.inputLogIn}
                        placeholder="–ü–∞—Ä–æ–ª—å"
                        onChange={(ev) => setPass(ev.target.value)}
                    />
                    <button
                        disabled={disabled}
                        className={style.btnLogIn}
                        onClick={checkLoginAndPass}
                    >
                        –£–≤—ñ–π—Ç–∏
                    </button>
                    <span
                        className={style.err}
                        dangerouslySetInnerHTML={{__html: result}}
                    ></span>
                </form>
            </div>
        </div>
    );
}

export default LogIn;
